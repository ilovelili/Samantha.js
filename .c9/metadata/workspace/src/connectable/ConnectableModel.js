{"filter":false,"title":"ConnectableModel.js","tooltip":"/src/connectable/ConnectableModel.js","undoManager":{"mark":12,"position":12,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":127,"column":0},"action":"insert","lines":["// Copyright 2012 Armagan Amcalar. All Rights Reserved.","//","// This file is part of Pedalboard.js.","//","// Pedalboard.js is free software: you can redistribute it and/or modify","// it under the terms of the GNU General Public License as published by","// the Free Software Foundation, either version 3 of the License, or","// (at your option) any later version.","//","// Pedalboard.js is distributed in the hope that it will be useful,","// but WITHOUT ANY WARRANTY; without even the implied warranty of","// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the","// GNU General Public License for more details.","//","// You should have received a copy of the GNU General Public License","// along with Pedalboard.js.  If not, see <http://www.gnu.org/licenses/>.","","/**"," * @fileoverview Base connectable component model. Hosts input and output buffer, chain and effects base."," */","","goog.provide('pb.ConnectableModel');","goog.require('pb.IConnectableModel');","","","","/**"," * Component model for base connectables."," *"," * @constructor"," * @implements {pb.IConnectableModel}"," * @param {AudioContext} context The context this component model will operate on."," */","pb.ConnectableModel = function(context) {","    this.context = context;","","    /**","     *","     * @type {GainNode}","     * @protected","     */","    this.inputBuffer = this.context.createGain();","","    /**","     *","     * @type {GainNode}","     * @protected","     */","    this.outputBuffer = this.context.createGain();","","    /**"," *"," * @type {Array.<AudioNode>}"," */","    this.chain = [];","","    /**"," *"," * @type {Array.<AudioNode>}"," */","    this.effects = [];","};","","","/**"," * Connects the output of the audio node of this model to another audio node."," *"," * @param {AudioNode} destination Next audio node where the output of this model's node will connect to."," */","pb.ConnectableModel.prototype.connect = function(destination) {","    this.next = destination;","    this.chain = [].concat(this.inputBuffer, this.effects, this.outputBuffer, this.next);","","    this.routeInternal();","};","","","/**"," * Gets the input buffer of a pedal."," *"," * @return {AudioNode} The input buffer of this component."," */","pb.ConnectableModel.prototype.getInput = function() {","    return this.inputBuffer;","};","","","/**"," * Gets the output buffer of a pedal."," *"," * @return {AudioNode} The output buffer of this component."," */","pb.ConnectableModel.prototype.getOutput = function() {","    return this.outputBuffer;","};","","","/**"," * Lets the model know who is connected to its effects node."," *"," * @param {AudioNode} prev Previous node who is connected to this model's effects node."," */","pb.ConnectableModel.prototype.setPrev = function(prev) {","    this.prev = prev;","};","","","/**"," * Routes the internal effects chain."," *"," * @protected"," */","pb.ConnectableModel.prototype.routeInternal = function() {","    var chain = this.chain;","","    for (var i = 0, len = chain.length - 1; i < len; i++) {","        chain[i].connect(chain[i + 1]);","    }","};","","","/**"," * Disconnects the output buffer of this pedal."," */","pb.ConnectableModel.prototype.disconnect = function() {","    this.outputBuffer.disconnect();","};",""]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":16,"column":0},"action":"remove","lines":["// Copyright 2012 Armagan Amcalar. All Rights Reserved.","//","// This file is part of Pedalboard.js.","//","// Pedalboard.js is free software: you can redistribute it and/or modify","// it under the terms of the GNU General Public License as published by","// the Free Software Foundation, either version 3 of the License, or","// (at your option) any later version.","//","// Pedalboard.js is distributed in the hope that it will be useful,","// but WITHOUT ANY WARRANTY; without even the implied warranty of","// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the","// GNU General Public License for more details.","//","// You should have received a copy of the GNU General Public License","// along with Pedalboard.js.  If not, see <http://www.gnu.org/licenses/>.",""]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"remove","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":4,"column":14},"end":{"row":4,"column":16},"action":"remove","lines":["pb"]},{"start":{"row":4,"column":14},"end":{"row":4,"column":22},"action":"insert","lines":["Samantha"]}]}],[{"group":"doc","deltas":[{"start":{"row":5,"column":14},"end":{"row":5,"column":16},"action":"remove","lines":["pb"]},{"start":{"row":5,"column":14},"end":{"row":5,"column":22},"action":"insert","lines":["Samantha"]}]}],[{"group":"doc","deltas":[{"start":{"row":13,"column":16},"end":{"row":13,"column":18},"action":"remove","lines":["pb"]},{"start":{"row":13,"column":16},"end":{"row":13,"column":24},"action":"insert","lines":["Samantha"]}]}],[{"group":"doc","deltas":[{"start":{"row":16,"column":0},"end":{"row":16,"column":2},"action":"remove","lines":["pb"]},{"start":{"row":16,"column":0},"end":{"row":16,"column":8},"action":"insert","lines":["Samantha"]}]}],[{"group":"doc","deltas":[{"start":{"row":52,"column":0},"end":{"row":52,"column":2},"action":"remove","lines":["pb"]},{"start":{"row":52,"column":0},"end":{"row":52,"column":8},"action":"insert","lines":["Samantha"]}]}],[{"group":"doc","deltas":[{"start":{"row":65,"column":0},"end":{"row":65,"column":2},"action":"remove","lines":["pb"]},{"start":{"row":65,"column":0},"end":{"row":65,"column":8},"action":"insert","lines":["Samantha"]}]}],[{"group":"doc","deltas":[{"start":{"row":75,"column":0},"end":{"row":75,"column":2},"action":"remove","lines":["pb"]},{"start":{"row":75,"column":0},"end":{"row":75,"column":8},"action":"insert","lines":["Samantha"]}]}],[{"group":"doc","deltas":[{"start":{"row":85,"column":0},"end":{"row":85,"column":2},"action":"remove","lines":["pb"]},{"start":{"row":85,"column":0},"end":{"row":85,"column":8},"action":"insert","lines":["Samantha"]}]}],[{"group":"doc","deltas":[{"start":{"row":95,"column":0},"end":{"row":95,"column":2},"action":"remove","lines":["pb"]},{"start":{"row":95,"column":0},"end":{"row":95,"column":8},"action":"insert","lines":["Samantha"]}]}],[{"group":"doc","deltas":[{"start":{"row":107,"column":0},"end":{"row":107,"column":2},"action":"remove","lines":["pb"]},{"start":{"row":107,"column":0},"end":{"row":107,"column":8},"action":"insert","lines":["Samantha"]}]}]]},"ace":{"folds":[],"scrolltop":1314,"scrollleft":0,"selection":{"start":{"row":90,"column":3},"end":{"row":90,"column":3},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1425219284015,"hash":"e23185ca21ca200e496fb9b355da10d8ca11bbe9"}