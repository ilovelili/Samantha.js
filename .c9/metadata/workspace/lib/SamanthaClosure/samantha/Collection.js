{"filter":false,"title":"Collection.js","tooltip":"/lib/SamanthaClosure/samantha/Collection.js","undoManager":{"mark":34,"position":34,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":266,"column":0},"action":"insert","lines":["// Copyright 2011 Tart. All Rights Reserved.","//","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//","//      http://www.apache.org/licenses/LICENSE-2.0","//","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS-IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// See the License for the specific language governing permissions and","// limitations under the License.","","/**"," * @fileoverview tart.Collection is a useful data construct that also features an \"active item\". It is a key-value pair"," * collection with easy to use methods. It is also event-driven, so observers are notified when the index of the"," * active item changes."," *"," * Example usage:"," * var items = { foo : 'bar' };"," * var list = new tart.Collection(items);"," *"," * OR"," *"," * var items = ['A','B', 'C', 'D'];"," * var list = new tart.Collection(items);"," *"," * OR"," *"," * var items = { foo : 'bar', baz:'zoo' };"," * var list = new tart.Collection(items, 1); // Set activeItemIndex to 1"," */","","goog.provide('tart.Collection');","goog.require('goog.array');","goog.require('goog.pubsub.PubSub');","goog.require('tart.Err');","","","","/**"," * Constructor method"," *"," * @constructor"," * @extends {goog.pubsub.PubSub}"," * @param {tart.JSON=} initialList Default list items in JSON format."," * @param {number=} activeItem Default selected item index."," * @return {tart.Collection} A list object."," */","tart.Collection = function(initialList, activeItem) {","    // define privileged methods and properties here...","    goog.base(this);","    var initials = initialList || [];","    this.activeItemIndex_ = (activeItem === undefined) ? -1 : activeItem;","    this.values_ = []; // Values of all list elements.","    this.keys_ = []; // Keys of all list elements.","    this.items_ = []; // All key-val pairs in collection. Format [{a:1},{b:2},{c:x}]","","    // Initial values given like this: {a:b,c:d,e:f}","    //@todo This loop should be coded in generic javascript instead of jQuery.","    var _self = this;","    $.each(initials, function(a, b) {","        _self.addItem(a, b);","    });","    this.setActiveItemIndex(this.activeItemIndex_);","    return this;","};","goog.inherits(tart.Collection, goog.pubsub.PubSub);","","","/**"," * Adds a new key-value pair to the collection."," *"," * @param {number|string} key Key for the pair."," * @param {*} value Value for the pair."," * @return {boolean} Returns true if the add operation was successful."," */","tart.Collection.prototype.addItem = function(key, value) {","    if (key === undefined || value === undefined) {","        throw new tart.Err('Missing arguments (key: ' + key + ' value: ' + value + ')- you must give a key' +","                'and a value to add a new item.');","    } else if (this.getByKey(key)) {","        // Deffensive check: key's must be unique","        throw new tart.Err('Key \"' + key + '\" already in collection. Keys should be unique.');","    } else {","        var item = {};","        item[key] = value;","        this.keys_.push(key);","        this.values_.push(value);","        this.items_.push(item);","        return true;","    }","};","","","/**"," * Returns active item as JSON object."," *"," * @return {tart.JSON} returns the active key-value pair from the collection."," */","tart.Collection.prototype.getActiveItem = function() {","    return this.items_[this.getActiveItemIndex()];","};","","","/**"," * Returns active item's key."," *"," * @return {string|number} returns the active key from the collection."," */","tart.Collection.prototype.getActiveItemKey = function() {","    return this.keys_[this.getActiveItemIndex()];","};","","","/**"," * Returns active item's value."," *"," * @return {*} returns the active value from the collection."," */","tart.Collection.prototype.getActiveItemValue = function() {","    return this.values_[this.getActiveItemIndex()];","};","","","/**"," * Returns active item's index."," * @return {number} returns the active index in the collection."," */","tart.Collection.prototype.getActiveItemIndex = function() {","    return this.activeItemIndex_;","};","","","/**"," * Returns item by given key. If not found, returns boolean false."," *"," * @param {string|number} key key to search for."," * @return {tart.JSON} returns the key-value pair given a specific key."," */","tart.Collection.prototype.getByKey = function(key) {","    return this.items_[goog.array.indexOf(this.keys_, key)];","};","","","/**"," * Returns item by given value. If not found, returns boolean false."," *"," * @param {string|number} val value to search for."," * @return {tart.JSON} returns the key-value pair given a specific value."," */","tart.Collection.prototype.getByValue = function(val) {","    return this.items_[goog.array.indexOf(this.values_, val)];","};","","","/**"," * Returns item by given index."," *"," * @param {number} index Index to search in the collection."," * @return {tart.JSON|boolean|undefined} returns the key-value pair given an index."," */","tart.Collection.prototype.getByIndex = function(index) {","    if (index >= this.keys_.length || index < 0 || index === undefined || isNaN(index)) {","        return undefined;","    } else {","        return this.items_[index];","    }","};","","","/**"," * Dumps all items in an array."," * @return {Array} returns all pairs as an array."," */","tart.Collection.prototype.getAll = function() {","    return this.items_;","};","","","/** Returns all values in an array."," * @return {Array} returns all values in an array."," */","tart.Collection.prototype.getValues = function() {","    return this.values_;","};","","","/** Returns all keys in an array."," * @return {Array} returns all keys in an array."," */","tart.Collection.prototype.getKeys = function() {","    return this.keys_;","};","","","/**"," * Returns all items in a kvp format."," * @return {tart.JSON} obj returns an object that contains keys as its keys and values as its values."," */","tart.Collection.prototype.getItems = function() {","    var obj = {};","    for (var i = 0, l = this.items_.length; i < l; i++) {","        var item = this.items_[i];","        $.each(item, function(key, value) {","            obj[key] = value;","        });","    }","    return obj;","};","","","/**"," * Removes an item from collection which given by index and rebuilds the item collection."," * Returns new activeItemIndex if item successfully removed or FALSE if not."," *"," * @param {number} index Index to remove."," * @return {number|boolean|undefined} Condition of the operation or the active item index."," */","tart.Collection.prototype.removeByIndex = function(index) {","    if (index >= this.keys_.length || index < 0 || index === undefined || isNaN(index)) {","        return undefined;","    } else {","        var oldActiveKey = this.getActiveItemKey();","        this.items_.splice(index, 1);","        this.keys_.splice(index, 1);","        this.values_.splice(index, 1);","        var oldActiveIndex = goog.array.indexOf(this.keys_, oldActiveKey);","        if (oldActiveIndex > -1) {","            this.setActiveItemIndex(oldActiveIndex);","        } else {","            this.setActiveItemIndex(-1);","        }","        return this.activeItemIndex_;","    }","};","","","/**"," * Removes items by key."," * @param {string} key Game items key."," */","tart.Collection.prototype.removeByKey = function(key) {","    var keys = this.getKeys();","    var index = goog.array.indexOf(keys, key);","    this.removeByIndex(index);","};","","","/**"," * Sets active item index."," * @param {number} newIndex index to set as the new active item."," * @return {boolean} Whether the method was able to set the item."," */","tart.Collection.prototype.setActiveItemIndex = function(newIndex) {","    // Deffensive check; active item index should not greater than total items in collection.","    if (newIndex > this.values_.length - 1 || newIndex === undefined || isNaN(newIndex) || newIndex == this.activeItemIndex_) {","        return false;","    } else {","        var oldIndex = this.activeItemIndex_;","        this.activeItemIndex_ = newIndex;","        this.publish('indexChanged', this.activeItemIndex_, oldIndex);","        return true;","    }","};",""]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":13,"column":0},"action":"remove","lines":["// Copyright 2011 Tart. All Rights Reserved.","//","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//","//      http://www.apache.org/licenses/LICENSE-2.0","//","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS-IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// See the License for the specific language governing permissions and","// limitations under the License.",""]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"remove","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":1,"column":17},"end":{"row":1,"column":21},"action":"remove","lines":["tart"]},{"start":{"row":1,"column":17},"end":{"row":1,"column":32},"action":"insert","lines":["SamanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":7,"column":18},"end":{"row":7,"column":22},"action":"remove","lines":["tart"]},{"start":{"row":7,"column":18},"end":{"row":7,"column":33},"action":"insert","lines":["SamanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":12,"column":18},"end":{"row":12,"column":22},"action":"remove","lines":["tart"]},{"start":{"row":12,"column":18},"end":{"row":12,"column":33},"action":"insert","lines":["SamanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":17,"column":18},"end":{"row":17,"column":22},"action":"remove","lines":["tart"]},{"start":{"row":17,"column":18},"end":{"row":17,"column":33},"action":"insert","lines":["SamanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":20,"column":14},"end":{"row":20,"column":18},"action":"remove","lines":["tart"]},{"start":{"row":20,"column":14},"end":{"row":20,"column":29},"action":"insert","lines":["SamanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":23,"column":14},"end":{"row":23,"column":18},"action":"remove","lines":["tart"]},{"start":{"row":23,"column":14},"end":{"row":23,"column":29},"action":"insert","lines":["SamanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":32,"column":11},"end":{"row":32,"column":15},"action":"remove","lines":["tart"]},{"start":{"row":32,"column":11},"end":{"row":32,"column":26},"action":"insert","lines":["SamanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":34,"column":12},"end":{"row":34,"column":16},"action":"remove","lines":["tart"]},{"start":{"row":34,"column":12},"end":{"row":34,"column":27},"action":"insert","lines":["SamanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":36,"column":0},"end":{"row":36,"column":4},"action":"remove","lines":["tart"]},{"start":{"row":36,"column":0},"end":{"row":36,"column":15},"action":"insert","lines":["SamanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":54,"column":14},"end":{"row":54,"column":18},"action":"remove","lines":["tart"]},{"start":{"row":54,"column":14},"end":{"row":54,"column":29},"action":"insert","lines":["SamanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":64,"column":0},"end":{"row":64,"column":4},"action":"remove","lines":["tart"]},{"start":{"row":64,"column":0},"end":{"row":64,"column":15},"action":"insert","lines":["SamanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":66,"column":18},"end":{"row":66,"column":22},"action":"remove","lines":["tart"]},{"start":{"row":66,"column":18},"end":{"row":66,"column":33},"action":"insert","lines":["SamanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":70,"column":18},"end":{"row":70,"column":22},"action":"remove","lines":["tart"]},{"start":{"row":70,"column":18},"end":{"row":70,"column":33},"action":"insert","lines":["SamanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":85,"column":12},"end":{"row":85,"column":16},"action":"remove","lines":["tart"]},{"start":{"row":85,"column":12},"end":{"row":85,"column":27},"action":"insert","lines":["SamanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":87,"column":0},"end":{"row":87,"column":4},"action":"remove","lines":["tart"]},{"start":{"row":87,"column":0},"end":{"row":87,"column":15},"action":"insert","lines":["SamanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":97,"column":0},"end":{"row":97,"column":4},"action":"remove","lines":["tart"]},{"start":{"row":97,"column":0},"end":{"row":97,"column":15},"action":"insert","lines":["SamanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":107,"column":0},"end":{"row":107,"column":4},"action":"remove","lines":["tart"]},{"start":{"row":107,"column":0},"end":{"row":107,"column":15},"action":"insert","lines":["SamanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":116,"column":0},"end":{"row":116,"column":4},"action":"remove","lines":["tart"]},{"start":{"row":116,"column":0},"end":{"row":116,"column":15},"action":"insert","lines":["SamanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":125,"column":12},"end":{"row":125,"column":16},"action":"remove","lines":["tart"]},{"start":{"row":125,"column":12},"end":{"row":125,"column":27},"action":"insert","lines":["SamanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":127,"column":0},"end":{"row":127,"column":4},"action":"remove","lines":["tart"]},{"start":{"row":127,"column":0},"end":{"row":127,"column":15},"action":"insert","lines":["SamanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":136,"column":12},"end":{"row":136,"column":16},"action":"remove","lines":["tart"]},{"start":{"row":136,"column":12},"end":{"row":136,"column":27},"action":"insert","lines":["SamanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":138,"column":0},"end":{"row":138,"column":4},"action":"remove","lines":["tart"]},{"start":{"row":138,"column":0},"end":{"row":138,"column":15},"action":"insert","lines":["SamanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":147,"column":12},"end":{"row":147,"column":16},"action":"remove","lines":["tart"]},{"start":{"row":147,"column":12},"end":{"row":147,"column":27},"action":"insert","lines":["SamanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":149,"column":0},"end":{"row":149,"column":4},"action":"remove","lines":["tart"]},{"start":{"row":149,"column":0},"end":{"row":149,"column":15},"action":"insert","lines":["SamanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":162,"column":0},"end":{"row":162,"column":4},"action":"remove","lines":["tart"]},{"start":{"row":162,"column":0},"end":{"row":162,"column":15},"action":"insert","lines":["SamanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":170,"column":0},"end":{"row":170,"column":4},"action":"remove","lines":["tart"]},{"start":{"row":170,"column":0},"end":{"row":170,"column":15},"action":"insert","lines":["SamanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":178,"column":0},"end":{"row":178,"column":4},"action":"remove","lines":["tart"]},{"start":{"row":178,"column":0},"end":{"row":178,"column":15},"action":"insert","lines":["SamanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":185,"column":12},"end":{"row":185,"column":16},"action":"remove","lines":["tart"]},{"start":{"row":185,"column":12},"end":{"row":185,"column":27},"action":"insert","lines":["SamanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":187,"column":0},"end":{"row":187,"column":4},"action":"remove","lines":["tart"]},{"start":{"row":187,"column":0},"end":{"row":187,"column":15},"action":"insert","lines":["SamanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":206,"column":0},"end":{"row":206,"column":4},"action":"remove","lines":["tart"]},{"start":{"row":206,"column":0},"end":{"row":206,"column":15},"action":"insert","lines":["SamanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":229,"column":0},"end":{"row":229,"column":4},"action":"remove","lines":["tart"]},{"start":{"row":229,"column":0},"end":{"row":229,"column":15},"action":"insert","lines":["SamanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":241,"column":0},"end":{"row":241,"column":4},"action":"remove","lines":["tart"]},{"start":{"row":241,"column":0},"end":{"row":241,"column":15},"action":"insert","lines":["SamanthaClosure"]}]}]]},"ace":{"folds":[],"scrolltop":2981,"scrollleft":0,"selection":{"start":{"row":237,"column":26},"end":{"row":237,"column":26},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1425208423210,"hash":"f172344157e5e42cf797d84dc1a1fe04f0895aef"}