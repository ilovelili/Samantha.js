{"filter":false,"title":"FormValidator.js","tooltip":"/lib/SamanthaClosure/samantha/formvalidator/FormValidator.js","undoManager":{"mark":26,"position":26,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":242,"column":0},"action":"insert","lines":["// Copyright 2011 Tart. All Rights Reserved.","//","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//","//      http://www.apache.org/licenses/LICENSE-2.0","//","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS-IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// See the License for the specific language governing permissions and","// limitations under the License.","","/**"," * @fileoverview tart.FormValidator is a form validation library which uses tart.Validation instance as validator."," *"," * Example usage:"," *"," * var form = $(\"form\");"," * var validationForSubmit = function (errors) {"," *     //do some stuff with 'errors' object"," * };"," * var validationForBlur = function (errors) {"," *     //do some stuff with 'errors' object"," * };"," * tart.FormValidator(form).validateOnSubmit(validationForSubmit);"," * tart.FormValidator(form).validateOnBlur(validateOnBlur);"," *"," * More examples can be seen from spec/FormValidationSpec.js file"," */","","goog.require('tart.Validation');","","goog.provide('tart.FormValidator');","","","","/**"," * Attach validator to formEl"," *"," * @param {Object} formEl jQuery element for selected form."," * @constructor"," * @return {tart.FormValidator} ."," */","tart.FormValidator = function(formEl) {","    //TODO: this is tightly coupled to tart.Validation","    /* @protected */","    this.validator = tart.Validation;","    /* @protected */","    this.form = formEl;","    /* @protected */","    this.errors = [];","    return this;","};","","","/**"," * Set validation rules to attached form"," *"," * @param {Object} rules given rules in object literal notation."," * @return {tart.FormValidator} ."," * @this {tart.FormValidator} ."," */","tart.FormValidator.prototype.setRules = function(rules) {","    this.rules = rules;","    return this;","};","","","/**"," * Find element with elementName in given form object"," *"," * @param {string} elementName name of element which to be find in form."," * @return {Object} jQuery object for given element."," */","tart.FormValidator.prototype.getFormElementByName = function(elementName) {","    var el = this.form.find('input[name=' + elementName + ']');","    return el;","};","","","/**"," * Find related element attribute for given input type"," *"," * @param {Object} el jQuery object of element."," * @return {string} elements value for related input type."," */","tart.FormValidator.prototype.getElementAttributeToCheck = function(el) {","    //TODO: this can vary on elements type such has \"attr\"","    return el.val();","};","","","/**"," * Rule key for tart.Validation"," *"," * @param {string} ruleKey key of rule."," * @return {Function} elements value for related input type."," */","tart.FormValidator.prototype.getValidationRuleByKey = function(ruleKey) {","    var rule;","    //TODO: this swich case should be looked up from an object literal","    switch (ruleKey) {","        case 'isEmail' : rule = this.validator.is.email; break;","        case 'isNotOnlySpace' : rule = this.validator.is.notOnlySpace; break;","        case 'isNumeric' : rule = this.validator.is.numeric; break;","        case 'isDigitAndNonDigit' : rule = this.validator.is.digitAndNonDigit; break;","        case 'hasMaxLength' : rule = this.validator.has.maxLength; break;","        case 'hasMinLength' : rule = this.validator.has.minLength; break;","        case 'hasMaxValue' : rule = this.validator.has.maxValue; break;","        case 'hasMinValue' : rule = this.validator.has.minValue; break;","    }","","    return rule;","};","","","/**"," * Get rule key and rule options from rule object"," *"," * @param {Object} rule rule object whom key is ruleName and value is rule options."," * @return {Object} object which has .key and .options nodes."," */","tart.FormValidator.prototype.getRuleKeyAndOptions = function(rule) {","    var results = [];","","    //TODO: there should be a smarter way to do this","    for (var i in rule) {","        results.push({key: i, options: rule[i]});","    }","","    return results;","};","","","/**"," * Apply rule and generate result in object literal"," *"," * @param {Object} el jQuery object to rule rule object whom key is ruleName and value is rule options."," * @param {Object} rule rule to be applied to el."," * @return {Object} result object which has .success and .item nodes."," */","tart.FormValidator.prototype.applyRule = function(el, rule) {","    var value = this.getElementAttributeToCheck(el);","    var keyAndOptionsArray = this.getRuleKeyAndOptions(rule);","","    var keyAndOptions,","        key,","        validationRule,","        options,","        result,","        failed = false;","","    for (var i = 0; i < keyAndOptionsArray.length; i++) {","        keyAndOptions = keyAndOptionsArray[i];","        key = keyAndOptions.key;","        options = keyAndOptions.options;","        validationRule = this.getValidationRuleByKey(key);","        result = validationRule(value, options.value);","","        //return on first error","        if (!result) {","            break;","        }","    }","","    return {success: result, item: {el: el, text: options.text}};","};","","","/**"," * Validate given form object with given rules, if any errors occured this.errors array will be populated"," *"," * @return {tart.FormValidator} ."," */","tart.FormValidator.prototype.validate = function() {","    this.errors = [];","    var el,","        rule,","        result;","","    for (var i in this.rules) {","        el = this.getFormElementByName(i);","        rule = this.rules[i];","","        result = this.applyRule(el, rule);","","        if (!result.success) {","            this.errors.push(result.item);","            break;","        }","    }","","    return this;","};","","","/**"," * Check if validation operation is successful or not by looking at this.errors array"," *"," * @return {boolean} validation is successful or not."," */","tart.FormValidator.prototype.isValid = function() {","    if (this.errors.length == 0) {","        return true;","    }","    else {","        return false;","    }","};","","","/**"," * Get generated errors array which contains element (el) and error text(text)"," *"," * @return {Array} errors array."," */","tart.FormValidator.prototype.getErrors = function() {","    return this.errors;","};","","","/**"," * Validate form on submit"," *"," * @param {Function} callback callback function after submit."," */","tart.FormValidator.prototype.validateOnSubmit = function(callback) {","    callback = callback || function() {};","","    var that = this;","","    this.form.submit(function(e) {","        that.validate();","        if (!that.isValid()) { //if an error occured","            e.preventDefault();","            e.stopImmediatePropagation(); //stop other events propagation","            callback(that.getErrors());","        }","    });","};",""]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":13,"column":0},"action":"remove","lines":["// Copyright 2011 Tart. All Rights Reserved.","//","// Licensed under the Apache License, Version 2.0 (the \"License\");","// you may not use this file except in compliance with the License.","// You may obtain a copy of the License at","//","//      http://www.apache.org/licenses/LICENSE-2.0","//","// Unless required by applicable law or agreed to in writing, software","// distributed under the License is distributed on an \"AS-IS\" BASIS,","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","// See the License for the specific language governing permissions and","// limitations under the License.",""]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"remove","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":1,"column":17},"end":{"row":1,"column":21},"action":"remove","lines":["tart"]},{"start":{"row":1,"column":17},"end":{"row":1,"column":32},"action":"insert","lines":["samanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":1,"column":87},"end":{"row":1,"column":91},"action":"remove","lines":["tart"]},{"start":{"row":1,"column":87},"end":{"row":1,"column":102},"action":"insert","lines":["samanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":12,"column":3},"end":{"row":12,"column":7},"action":"remove","lines":["tart"]},{"start":{"row":12,"column":3},"end":{"row":12,"column":18},"action":"insert","lines":["samanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":13,"column":3},"end":{"row":13,"column":7},"action":"remove","lines":["tart"]},{"start":{"row":13,"column":3},"end":{"row":13,"column":18},"action":"insert","lines":["samanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":18,"column":14},"end":{"row":18,"column":18},"action":"remove","lines":["tart"]},{"start":{"row":18,"column":14},"end":{"row":18,"column":29},"action":"insert","lines":["samanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":20,"column":14},"end":{"row":20,"column":18},"action":"remove","lines":["tart"]},{"start":{"row":20,"column":14},"end":{"row":20,"column":29},"action":"insert","lines":["samanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":29,"column":12},"end":{"row":29,"column":16},"action":"remove","lines":["tart"]},{"start":{"row":29,"column":12},"end":{"row":29,"column":27},"action":"insert","lines":["samanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":31,"column":0},"end":{"row":31,"column":4},"action":"remove","lines":["tart"]},{"start":{"row":31,"column":0},"end":{"row":31,"column":15},"action":"insert","lines":["samanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":32,"column":39},"end":{"row":32,"column":43},"action":"remove","lines":["tart"]},{"start":{"row":32,"column":39},"end":{"row":32,"column":54},"action":"insert","lines":["samanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":34,"column":21},"end":{"row":34,"column":25},"action":"remove","lines":["tart"]},{"start":{"row":34,"column":21},"end":{"row":34,"column":36},"action":"insert","lines":["samanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":47,"column":12},"end":{"row":47,"column":16},"action":"remove","lines":["tart"]},{"start":{"row":47,"column":12},"end":{"row":47,"column":27},"action":"insert","lines":["samanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":48,"column":10},"end":{"row":48,"column":14},"action":"remove","lines":["tart"]},{"start":{"row":48,"column":10},"end":{"row":48,"column":25},"action":"insert","lines":["samanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":50,"column":0},"end":{"row":50,"column":4},"action":"remove","lines":["tart"]},{"start":{"row":50,"column":0},"end":{"row":50,"column":15},"action":"insert","lines":["samanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":0},"end":{"row":62,"column":4},"action":"remove","lines":["tart"]},{"start":{"row":62,"column":0},"end":{"row":62,"column":15},"action":"insert","lines":["samanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":74,"column":0},"end":{"row":74,"column":4},"action":"remove","lines":["tart"]},{"start":{"row":74,"column":0},"end":{"row":74,"column":15},"action":"insert","lines":["samanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":81,"column":16},"end":{"row":81,"column":20},"action":"remove","lines":["tart"]},{"start":{"row":81,"column":16},"end":{"row":81,"column":31},"action":"insert","lines":["samanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":86,"column":0},"end":{"row":86,"column":4},"action":"remove","lines":["tart"]},{"start":{"row":86,"column":0},"end":{"row":86,"column":15},"action":"insert","lines":["samanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":110,"column":0},"end":{"row":110,"column":4},"action":"remove","lines":["tart"]},{"start":{"row":110,"column":0},"end":{"row":110,"column":15},"action":"insert","lines":["samanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":129,"column":0},"end":{"row":129,"column":4},"action":"remove","lines":["tart"]},{"start":{"row":129,"column":0},"end":{"row":129,"column":15},"action":"insert","lines":["samanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":160,"column":12},"end":{"row":160,"column":16},"action":"remove","lines":["tart"]},{"start":{"row":160,"column":12},"end":{"row":160,"column":27},"action":"insert","lines":["samanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":162,"column":0},"end":{"row":162,"column":4},"action":"remove","lines":["tart"]},{"start":{"row":162,"column":0},"end":{"row":162,"column":15},"action":"insert","lines":["samanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":189,"column":0},"end":{"row":189,"column":4},"action":"remove","lines":["tart"]},{"start":{"row":189,"column":0},"end":{"row":189,"column":15},"action":"insert","lines":["samanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":204,"column":0},"end":{"row":204,"column":4},"action":"remove","lines":["tart"]},{"start":{"row":204,"column":0},"end":{"row":204,"column":15},"action":"insert","lines":["samanthaClosure"]}]}],[{"group":"doc","deltas":[{"start":{"row":214,"column":0},"end":{"row":214,"column":4},"action":"remove","lines":["tart"]},{"start":{"row":214,"column":0},"end":{"row":214,"column":15},"action":"insert","lines":["samanthaClosure"]}]}]]},"ace":{"folds":[],"scrolltop":3068,"scrollleft":0,"selection":{"start":{"row":206,"column":2},"end":{"row":206,"column":2},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":5,"state":"doc-start","mode":"ace/mode/javascript"}},"timestamp":1425193056723,"hash":"a9fe232619a20b71f234d7191bf23034740e8f8e"}